<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javafx on Aston&#39;s Programming Thoughts</title>
    <link>https://astonbitecode.github.io/blog/tags/javafx/</link>
    <description>Recent content in Javafx on Aston&#39;s Programming Thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Feb 2019 00:05:58 +0000</lastBuildDate>
    
	<atom:link href="https://astonbitecode.github.io/blog/tags/javafx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaFX UI in Rust</title>
      <link>https://astonbitecode.github.io/blog/post/rust-javafx/</link>
      <pubDate>Thu, 28 Feb 2019 00:05:58 +0000</pubDate>
      
      <guid>https://astonbitecode.github.io/blog/post/rust-javafx/</guid>
      <description>In this post, I would like to share the way how we can implement a Rust application that has a User Interface written in JavaFX.
A brief description follows, but you may see the full code here.
General description We will create a Rust application that:
 Creates a JVM Starts a JavaFX application Accepts callbacks from the Java world and prints them in the console.  Creating a JVM from Rust code and communicating with the Java world is achieved using the j4rs crate.</description>
    </item>
    
  </channel>
</rss>